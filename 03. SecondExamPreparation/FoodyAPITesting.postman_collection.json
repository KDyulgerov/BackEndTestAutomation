{
	"info": {
		"_postman_id": "c57632e2-b715-4a02-a919-64f7e0f5d3e7",
		"name": "FoodyAPITesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28681348",
		"_collection_link": "https://winter-satellite-780629.postman.co/workspace/SoftUni_QA_Fund~86955706-c568-4a0a-b9a0-b79644940f75/collection/28681348-c57632e2-b715-4a02-a919-64f7e0f5d3e7?action=share&source=collection_link&creator=28681348"
	},
	"item": [
		{
			"name": "Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.test(\"Response body has email, password and accessToken\", () => {\r",
							"    pm.expect(responseData).to.have.property(\"username\")\r",
							"    pm.expect(responseData).to.have.property(\"password\")\r",
							"    pm.expect(responseData).to.have.property(\"accessToken\")\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"accessToken\", responseData.accessToken)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"UserSoftuniTesting1\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateFood",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.test(\"The response body contains a 'foodId' property and it is not empty.\", () => {\r",
							"    pm.expect(responseData).to.have.property(\"foodId\")\r",
							"    pm.expect(responseData.foodId).not.to.be.empty\r",
							"})\r",
							"\r",
							"var foodId = responseData.foodId\r",
							"pm.collectionVariables.set(\"foodId\", foodId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomDigit = Math.floor(Math.random() * 1000)\r",
							"var randomFood = `Food${randomDigit}`\r",
							"\r",
							"pm.collectionVariables.set(\"randomFood\", randomFood)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{randomFood}}\",\r\n  \"description\": \"Description of the {{randomFood}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "SearchFood",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"const randomFoodTitle = pm.collectionVariables.get(\"randomFood\")\r",
							"\r",
							"pm.test(`The response is an array and it contains the food name ${randomFoodTitle}`, () => {\r",
							"    pm.expect(responseData).to.be.an(\"array\")\r",
							"    pm.expect(responseData[0].name).to.eql(randomFoodTitle)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Search?keyword={{randomFood}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomFood}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EditFood",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response message is 'Successfully edited'\", () => {\r",
							"    pm.expect(responseData.msg).to.eql('Successfully edited');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n {\r\n  \"path\": \"/name\",\r\n  \"op\": \"replace\",\r\n  \"value\": \"{{randomFood}} EDITED\"\r\n }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Edit/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Edit",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EditFood Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response message is 'Deleted successfully!'\", () => {\r",
							"    pm.expect(responseData.msg).to.eql('Deleted successfully!');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Delete/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Delete",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://softuni-qa-loadbalancer-2137572849.eu-north-1.elb.amazonaws.com:86",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomFood",
			"value": ""
		},
		{
			"key": "foodId",
			"value": ""
		}
	]
}